Create table Person (PersonId int, FirstName varchar(255), LastName varchar(255))
Create table Address (AddressId int, PersonId int, City varchar(255), State varchar(255))
Truncate table Person
insert into Person (PersonId, LastName, FirstName) values ('1', 'Wang', 'Allen')
Truncate table Address
insert into Address (AddressId, PersonId, City, State) values ('1', '2', 'New York City', 'New York')

表1: Person

+-------------+---------+
| 列名         | 类型     |
+-------------+---------+
| PersonId    | int     |
| FirstName   | varchar |
| LastName    | varchar |
+-------------+---------+
PersonId 是上表主键

表2: Address

+-------------+---------+
| 列名         | 类型    |
+-------------+---------+
| AddressId   | int     |
| PersonId    | int     |
| City        | varchar |
| State       | varchar |
+-------------+---------+
AddressId 是上表主键

编写一个 SQL 查询，满足条件：无论 person 是否有地址信息，都需要基于上述两表提供 person 的以下信息：

FirstName, LastName, City, State

本题主要考察多表连接。
按题意要求，使用outer join时可以保证指定表的每条记录都出现----即使没有匹配, outer join又可以分为left join, right join, full join。
我们想让Address表中即使没有Person，也让Person有Address属性,所以Address为必须出现表，那么我们可以用 Person表 left join Address，或者反过来用right join。

select A.FirstName, A.LastName, B.City, B.State from Person A left join Address B
on A.PersonId = B.PersonId;

我看了一下运行效率比较高的朋友的解法，在join前先对Address表处理，去除Address里的重复项，然后让Person left join Address。

select A.FirstName, A.LastName, B.City, B.State from Person A left join (
select distinct PersonId, City, State from Address) B
on A.PersonId = B.PersonId;

这样做的好处是，在数据量特别大而且重复量也特别大时，可以节省join次数，从而节省效率，当然当数据量不那么大，重复数据不那么多时，反而会影响效率，大家可以说说自己看法，一起进步，觉得可以请点赞谢谢。

作者：xksa
链接：https://leetcode-cn.com/problems/combine-two-tables/solution/joinji-ben-shi-yong-by-xksa/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
